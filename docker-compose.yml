version: "3.3"

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
      - 2181:2181
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  db:
    container_name: banco-dados
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - "./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"

  ### JAEGER ###
  jaeger-all-in-one:
    container_name: ecommerce-school-jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one

  grafana:
    image: grafana/grafana-enterprise:8.2.0
    ports:
      - 3000:3000

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus-config/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  nota-fiscal:
    container_name: nota-fiscal
    image: wiremock/wiremock
    ports:
      - 8090:8080
    volumes:
      - "./wiremock:/home/wiremock/mappings/"


  ### MICRO-SERVICE: cliente-ms ###
  cliente-ms:
    image: cliente-ms:latest
    ports:
      - 8000:8000
      - 7771:7771
    build:
      context: cliente-ms
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - nota-fiscal
      - db
      - kafka
      - otel-collector

  ## MICRO-SERVICE: pedidos-ms ###
  pedidos-ms:
    image: pedidos-ms:latest
    ports:
      - 8001:8001
      - 7772:7772
    build:
      context: pedidos-ms
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - nota-fiscal
      - db
      - kafka
      - otel-collector

  ### MICRO-SERVICE: processamento-ms ###
  processamento-ms:
    image: processamento-ms:latest
    ports:
      - 8081:8081
      - 7773:7773
    build:
      context: processamento-ms
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - nota-fiscal
      - db
      - kafka
      - otel-collector

  ### MICRO-SERVICE: produtos-ms ###
  produtos-ms:
    image: produtos-ms:latest
    ports:
      - 8003:8003
      - 7774:7774
    build:
      context: produtos-ms
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - nota-fiscal
      - db
      - kafka
      - otel-collector

### NETWORKS ###
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.1/24
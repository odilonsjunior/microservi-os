server.servlet.context-path=/api
server.port=8001

###### CONFIGURAÇÂO KAFKA ######
###### PRODUCER ######
spring.kafka.producer.bootstrap-servers=172.18.0.1:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.pruducer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.spring.json.type.mapping=PedidoDTO:br.com.ecommerce.school.pedidosms.dto.PedidoDTO
###### CONSUMER ######
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=172.18.0.1:29092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=PedidoFinalizadoDTO:br.com.ecommerce.school.pedidosms.dto.PedidoFinalizadoDTO
spring.kafka.consumer.group-id=pedidos

###### TOPICOS PRODUCERS ######
criar.pedido=criar_pedido
pedido.finalizado=pedido_finalizado

####### CONFIGURACAO DE BANCO #######
spring.datasource.url=jdbc:mysql://localhost:3306/pedidos
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

####### CLIENTE ########
url.server.cliente=http://localhost:8000

####### BUSCAR CLIENTE ########
uri.buscar.cliente=/api/clientes/{cliente}